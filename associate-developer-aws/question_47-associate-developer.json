{
  "id": "103721",
  "question": "question-47",
  "body": "An application uses an Amazon EC2 Auto Scaling group. A developer notices that EC2 instances are taking a long time to become available during scale-out events. The UserData script is taking a long time to run.\nThe developer must implement a solution to decrease the time that elapses before an EC2 instance becomes available. The solution must make the most recent version of the application available at all times and must apply all available security updates. The solution also must minimize the number of images that are created. The images must be validated.\nWhich combination of steps should the developer take to meet these requirements? (Choose two.)\nA. Use EC2 Image Builder to create an Amazon Machine Image (AMI). Install all the patches and agents that are needed to manage and run the application. Update the Auto Scaling group launch configuration to use the AMI.\nB. Use EC2 Image Builder to create an Amazon Machine Image (AMI). Install the latest version of the application and all the patches and agents that are needed to manage and run the application. Update the Auto Scaling group launch configuration to use the AMI.\nC. Set up AWS CodeDeploy to deploy the most recent version of the application at runtime.\nD. Set up AWS CodePipeline to deploy the most recent version of the application at runtime.\nE. Remove any commands that perform operating system patching from the UserData script.\nShow Suggested Answer",
  "comments": [
    {
      "user": "imvb88",
      "selectedAnswer": "AE",
      "body": "Why choose A over B? Problem is that B will tie an AMI with a specific version, so if there is a new version, we need to create a new AMI, and that contradicts with \"minimize the number of images that are created\". \n\nThen E over C, D? E is obviously complementary to A, where removing commands from User Data will make the instance booting process much faster (and of course with A you don't need that anymore). \n\nC and D also works but 1/not complementary with any other options; 2/CodeDeploy takes time to execute. \n\nHope this helps somebody struggling with this question.",
      "reply": [
        {
          "user": "yashika2005",
          "body": "thanksss a lott!"
        },
        {
          "user": "minh12312312",
          "body": "The solution must make the most recent version of the application available at all times"
        },
        {
          "user": "[Removed]",
          "body": "I agree I think between A and B.- answer is B"
        },
        {
          "user": "r3mo",
          "body": "And what about this requisit? \"The solution must make the most recent version of the application available at all times\". Only the Answer B fulfill this part."
        }
      ]
    },
    {
      "user": "yashika2005",
      "selectedAnswer": "",
      "body": "thanksss a lott!",
      "reply": []
    },
    {
      "user": "minh12312312",
      "selectedAnswer": "",
      "body": "The solution must make the most recent version of the application available at all times",
      "reply": [
        {
          "user": "[Removed]",
          "body": "I agree I think between A and B.- answer is B"
        }
      ]
    },
    {
      "user": "[Removed]",
      "selectedAnswer": "",
      "body": "I agree I think between A and B.- answer is B",
      "reply": []
    },
    {
      "user": "r3mo",
      "selectedAnswer": "",
      "body": "And what about this requisit? \"The solution must make the most recent version of the application available at all times\". Only the Answer B fulfill this part.",
      "reply": []
    },
    {
      "user": "KillThemWithKindness",
      "selectedAnswer": "AC",
      "body": "Option E, which suggests removing operating system patching from the UserData script, might reduce the startup time. But this could leave your instances unpatched and vulnerable, which doesn't meet the requirement to apply all available security updates.",
      "reply": [
        {
          "user": "maurice2005",
          "body": "well if u choose B and E then this will resolve as well"
        }
      ]
    },
    {
      "user": "maurice2005",
      "selectedAnswer": "",
      "body": "well if u choose B and E then this will resolve as well",
      "reply": []
    },
    {
      "user": "Shamalka",
      "selectedAnswer": "AC",
      "body": "A and C is the answer",
      "reply": []
    },
    {
      "user": "Arad",
      "selectedAnswer": "AE",
      "body": "AE is correct answer.",
      "reply": []
    },
    {
      "user": "sumanshu",
      "selectedAnswer": "AC",
      "body": "B) Eliminated - Similar to option A, but also includes the latest version of the application in the AMI. While this reduces initialization time, it violates the requirement to \"minimize the number of images\" because it necessitates frequent AMI updates to keep the application version current.\n\nC) CodeDeploy ensures that the most recent version of the application is deployed during runtime.\n\nE) Eliminated - This violates the requirement to \"apply all available security updates\"",
      "reply": []
    },
    {
      "user": "Yuri_024",
      "selectedAnswer": "AE",
      "body": "* The problem at hand is scaling-out events taking a long time (Instances need to spawn up fast, userData scripts must not run for long periods).\n* CodePipeline or CodeDeploy does not play any role there.\n* It does not mention an issue regarding the latest version of the application not being available.\n* So I choose A & E",
      "reply": []
    },
    {
      "user": "youonebe",
      "selectedAnswer": "AC",
      "body": "Option B is incorrect because:\nIncluding the application in the AMI would require new image creation for every application update\nResults in more frequent image builds than necessary\nIncreases maintenance overhead",
      "reply": []
    },
    {
      "user": "albert_kuo",
      "selectedAnswer": "AC",
      "body": "B. While similar to A, this option includes installing the latest version of the application in the AMI. This is not ideal because it would require creating a new AMI every time the application is updated, which doesn't align with the requirement to minimize the number of images created.",
      "reply": []
    },
    {
      "user": "wh1t4k3r",
      "selectedAnswer": "AC",
      "body": "B would require new images for each new app version. Idea is to minimize image creation, so A is a better fit.\nE does speed up the process, BUT does not cover the app version requirement, nor the necessity to validate images, which codedeploy covers.",
      "reply": []
    },
    {
      "user": "MrDurian",
      "selectedAnswer": "",
      "body": "IMO the correct answer is A and C.\n\nHaving a well set up AMI will reduce the need to run a long userData script.\n\nWhy not using B? Because that would couple the image with the app version. It is better to trigger a Code deploy that will deploy the latest version of the app on the 'optimized' AMI.\n\nRegarding answer E, it would also be correct IMO but A and C seems to be the perfect matching scenario",
      "reply": []
    },
    {
      "user": "IYNH",
      "selectedAnswer": "AC",
      "body": "The solution must make the most recent version of the application available at all times. B doesn't make sense because \"latest version at the time AMI is created\" becomes outdated when a newer one comes.\nC is obviously needed to make the actual \"latest\" version deploy.",
      "reply": []
    },
    {
      "user": "65703c1",
      "selectedAnswer": "BE",
      "body": "BE is the correct answer.",
      "reply": []
    },
    {
      "user": "MarcosSantos",
      "selectedAnswer": "",
      "body": "I choose BE. Is better response",
      "reply": []
    },
    {
      "user": "ufuomaapoki",
      "selectedAnswer": "AC",
      "body": "The requirements are: \n1. Decreasing the time it takes for EC2 instances to become available during scale-out events.\n2. Ensuring the most recent version of the application is available.\n3. Applying all available security updates.\n4. Minimising the number of images created.\n\n[A] will satisfy requirements 1, 3, 4\n[B] is similar to A, but will involve more AMI images\n[C] Since the applications are on EC2 instances, CodeDeploy will do just fine to update the applications to the most recent version\n[E] Removing any command for updates will leave our instances susceptible to vulnerabilities. Some commands can be removed, leaving the essential ones",
      "reply": []
    },
    {
      "user": "maurice2005",
      "selectedAnswer": "",
      "body": "B is faster than A. \nE delegates all run time to AMI build time on B option.",
      "reply": []
    },
    {
      "user": "ibratoev",
      "selectedAnswer": "",
      "body": "A and E.\nA because number of images needs to be minimized.\nE to speed up the boot time.",
      "reply": []
    },
    {
      "user": "KarBiswa",
      "selectedAnswer": "BE",
      "body": "The most practical answers",
      "reply": []
    }
  ]
}