{
  "id": "136967",
  "question": "question-343",
  "body": "A developer is building a new containerized application by using AWS Copilot. The developer uses the AWS Copilot command line interface (CLI) to deploy the application during development. The developer committed the application code to a new AWS CodeCommit repository. The developer must create an automated deployment process before releasing the new application to production.\n\nWhat should the developer do to meet these requirements in the MOST operationally efficient way?\nA. Create a buildspec file that invokes the AWS Copilot CLI commands to build and deploy the application. Use the AWS Copilot CLI to create an AWS CodePipeline that uses the CodeCommit repository in the source stage and AWS CodeBuild in the build stage.\nB. Use the AWS Serverless Application Model (AWS SAM) CLI to bootstrap and initialize an AWS CodePipeline configuration. Use the CodeCommit repository as the source. Invoke the AWS Copilot CLI to build and deploy the application.\nC. Use the AWS Copilot CLI to define the AWS Copilot pipeline and to deploy the AWS CodePipeline. Select CodeCommit as the source for the AWS CodePipeline.\nD. Define an AWS CloudFormation template for an AWS CodePipeline with CodeCommit as the source. Configure the template as an AWS Copilot CLI add-on. Use the AWS Copilot CLI to deploy the application.\nShow Suggested Answer",
  "comments": [
    {
      "user": "examuserss",
      "selectedAnswer": "C",
      "body": "Correct Answer:\nC. Use the AWS Copilot CLI to define the AWS Copilot pipeline and to deploy the AWS CodePipeline. Select CodeCommit as the source for the AWS CodePipeline.\n\nThis option is the most operationally efficient solution, as it makes full use of AWS Copilot's built-in capabilities to define and deploy the automated pipeline with minimal effort.",
      "reply": []
    },
    {
      "user": "preachr",
      "selectedAnswer": "C",
      "body": "https://aws.github.io/copilot-cli/docs/concepts/pipelines/",
      "reply": []
    },
    {
      "user": "wh1t4k3r",
      "selectedAnswer": "C",
      "body": "Both A and C work, the key word is efficiency. C is the most efficient way.",
      "reply": []
    },
    {
      "user": "65703c1",
      "selectedAnswer": "A",
      "body": "A is the correct answer.",
      "reply": []
    },
    {
      "user": "Lucky4Life",
      "selectedAnswer": "C",
      "body": "Per Chatgpt",
      "reply": []
    },
    {
      "user": "a1971h",
      "selectedAnswer": "C",
      "body": "C ,,,,,,,,,,,,,,,,,,,",
      "reply": []
    },
    {
      "user": "DeaconStJohn",
      "selectedAnswer": "C",
      "body": "https://ecsworkshop.com/microservices/frontend/#deploy-frontend-0:~:text=on%20the%20pipeline.-,Creating%20the%20pipeline,-Generally%2C%20when%20we\n\nThis workshop is linked from AWS docs @ https://docs.aws.amazon.com/AmazonECS/latest/developerguide/getting-started-aws-copilot-cli.html#:~:text=Step%206.%20Learn%20to%20create%20a%20CI/CD%20Pipeline\n\nCo-pilot CLI is a substitute for AWS console. As the question states the dev is using co-pilot I think this is the best answer, although option A is more suited to my experience.",
      "reply": []
    },
    {
      "user": "komorebi",
      "selectedAnswer": "A",
      "body": "The correct answer to ChetGPT is A",
      "reply": []
    }
  ]
}